package Main;

import javax.swing.JOptionPane;
//Creates a JOP class that serves as graphics for the program
public class JOP {
  //helps create the JOP for the game
  public static void msg(String msg) {
    JOptionPane.showMessageDialog(null, msg);
  }
  //Helps create the JOP for the game
  public static String in(String msg) {
    return JOptionPane.showInputDialog(msg);
  }
}

package Main;
//Creates a main class that initiates the whole program
public class Main {
  //Main method of the game which runs the game
  public static void main(String[] args) {
    new Controller();
  }
}

package Main;

import java.util.Random;
//Holds the Player and CPU input and gives you the outcome of each round
public class Controller {
  Random rand = new Random();
  
  private int plrInput = 0;
  
  private int cpuInput = 0;
  
  private int plrHealth = 1;
  
  private int cpuHealth = 1;
  
  int count = 0;
  
  private boolean running = true;
  //Creates a constructor that exits the game if you win, and adds or substracts the health of the player if they win or lose
  public Controller() {
    this.count = 0;
    while (true) {
      this.plrHealth = this.count + 1;
      this.cpuHealth = this.count * 2 + 1;
      if (this.count > 10) {
        JOP.msg("You have defeated everyone! Thanks for playing.");
        System.exit(0);
      } 
      while (this.running)
        outcome(); 
      this.count++;
    } 
  }
  //Takes in the player input of either rock, paper, and scissors
  public void playerInput() {
    String input = JOP.in("Type 'rock' 'paper' or 'scissors'");
    if (input == null) {
      System.exit(0);
    } else if (input.equals("rock")) {
      this.plrInput = 1;
    } else if (input.equals("paper")) {
      this.plrInput = 2;
    } else if (input.equals("scissors")) {
      this.plrInput = 3;
    } else {
      JOP.msg("Invalid input.");
      playerInput();
    } 
  }
  //Takes the random CPU input of rock, paper, and scissors
  public void computerInput() {
    switch (this.cpuInput = this.rand.nextInt(3) - 1) {
      case 1:
        JOP.msg("Computer chooses rock.");
        break;
      case 2:
        JOP.msg("Computer chooses paper.");
        break;
      case 3:
        JOP.msg("Computer chooses scissors.");
        break;
    } 
  }
 //Takes the outcome of both inputs and compares them to see who won from the player and CPU and subtracts the health of whoever loses the round 
  public void outcome() {
    playerInput();
    computerInput();
    if (this.plrInput == 2 && this.cpuInput == 1) {
      JOP.msg("Player landed a hit!");
      this.cpuHealth--;
    } else if (this.plrInput == 3 && this.cpuInput == 2) {
      JOP.msg("Player landed a hit!");
      this.cpuHealth--;
    } else if (this.plrInput == 1 && this.cpuInput == 3) {
      JOP.msg("Player landed a hit!");
      this.cpuHealth--;
    } else if (this.cpuInput == 1 && this.plrInput == 3) {
      JOP.msg("CPU landed a hit!");
      this.plrHealth--;
    } else if (this.cpuInput == 2 && this.plrInput == 1) {
      JOP.msg("CPU landed a hit!");
      this.plrHealth--;
    } else if (this.cpuInput == 3 && this.plrInput == 2) {
      JOP.msg("CPU landed a hit!");
      this.plrHealth--;
    } else if (this.cpuInput == this.plrInput) {
      JOP.msg("You and CPU missed!");
    } 
    if (this.cpuHealth <= 0) {
      JOP.msg("You win! Now fight a new rival!");
      this.running = false;
    } else if (this.plrHealth <= 0) {
      JOP.msg("You lose!");
      System.exit(0);
    } 
  }
}
